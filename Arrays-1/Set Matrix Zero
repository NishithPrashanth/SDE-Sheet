SOLUTION WHICH TAKES O(N^2) TIME AND O(N+M) SPACE
class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int m=matrix[0].size();
        int n=matrix.size();
        vector<bool> col(m, false); 
        vector<bool> row(n, false); 

        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(matrix[i][j]==0)
                {
                    row[i]=true;
                    col[j]=true;
                }
            }
        }
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(row[i]==true || col[j]==true)
                {
                    matrix[i][j]=0;
                }
            }
        }
        
      
    }
};

SOLUTION WHICH TAKES O(1) SPACE AND O(N^2) TIME

class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int m=matrix[0].size();//no.of coloums
        int n=matrix.size();//no.of rows
        int col1=1;
        //vector<bool> col(m, false); 
        //vector<bool> row(n, false); 

        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(matrix[i][j]==0)
                {
                    //mark the no.of rows which are 0 to 0
                    matrix[i][0]=0;
                    //mark the no.of coloums which are 0 to 0
                    if(j !=0)
                    {
                        matrix[0][j]=0; 
                    }
                    else
                    {
                        col1=0;
                    }
                }
            }
        }
        for(int i=1;i<n;i++)
        {
            for(int j=1;j<m;j++)
            {
                if(matrix[0][j]==0 || matrix[i][0]==0)
                {
                    matrix[i][j]=0;
                }
            }
        }
        if(matrix[0][0]==0)
        {
            for(int i=1;i<m;i++)
        {
            matrix[0][i]=0;
        }
        }
        if(col1==0)
        {
            for(int i=0;i<n;i++)
            {
                matrix[i][0]=0;
            }
        }

        



        
    }
};
